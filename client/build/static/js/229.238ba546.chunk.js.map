{"version":3,"file":"static/js/229.238ba546.chunk.js","mappings":"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","sources":["components/Loader.js","views/admin/users/UserList.js","../node_modules/@coreui/icons/js/free/cil-ban.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import React from 'react'\n\nfunction Loader({ loading = false, text = '' }) {\n  return (\n    <>\n      {loading && (\n        <div id=\"overlay\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CBadge,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport { cilPencil, cilPlus, cilMagnifyingGlass, cilCheckCircle, cilBan } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userList, totalRecords } from 'src/store/selector/user'\nimport { userListAction, userListClearAction } from 'src/store/actions/user'\nimport { Link } from 'react-router-dom'\nimport Loader from 'src/components/Loader'\n\nconst UserList = () => {\n  const users = useSelector(userList)\n  const total = useSelector(totalRecords)\n  const [limit, setLimit] = useState(10)\n  const [page, setPage] = useState(1)\n\n  const [statusFilter, setStatusFilter] = useState('')\n  const [emailFilter, setEmailFilter] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const dispatch = useDispatch(limit, page)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n\n    dispatch(\n      userListAction(\n        { limit, page, isActive: statusFilter, email: emailFilter, name: nameFilter },\n        loadingCallback,\n      ),\n    )\n\n    return () => {\n      dispatch(userListClearAction())\n    }\n  }, [userListAction, page])\n\n  const loadingCallback = () => {\n    setLoading(false)\n  }\n  const handleSubmit = (e) => {\n    setLoading(true)\n\n    e.preventDefault()\n    console.log({ statusFilter })\n    dispatch(\n      userListAction(\n        { limit, page, isActive: statusFilter, email: emailFilter, name: nameFilter },\n        loadingCallback,\n      ),\n    )\n  }\n\n  const clearFilters = () => {\n    setLoading(true)\n\n    setStatusFilter('')\n    setEmailFilter('')\n    setNameFilter('')\n\n    dispatch(userListAction({ limit, page, isActive: '', email: '', name: '' }, loadingCallback))\n  }\n  return (\n    <>\n      <Loader loading={loading}></Loader>\n\n      <CRow>\n        <CForm onSubmit={handleSubmit}>\n          <CRow className=\" row pb-3\" xs={12}>\n            <div className=\"col-md-3\">\n              <CFormInput\n                value={emailFilter}\n                type=\"text\"\n                placeholder=\"Enter user email\"\n                onChange={(e) => setEmailFilter(e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <CFormInput\n                value={nameFilter}\n                type=\"text\"\n                placeholder=\"Enter user name\"\n                onChange={(e) => setNameFilter(e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <CFormSelect\n                aria-label=\"Default select example\"\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n              >\n                <option disabled value=\"\">\n                  {' '}\n                  Status\n                </option>\n                <option value={true}>Active</option>\n                <option value={false}>Disabled</option>\n              </CFormSelect>\n            </div>\n\n            <div className=\"col-md-3 text-end ms-auto\">\n              <CButton type=\"submit\" color=\"secondary\" variant=\"outline\">\n                Search\n              </CButton>\n              <CButton\n                className=\"ms-2\"\n                type=\"button\"\n                color=\"secondary\"\n                variant=\"outline\"\n                onClick={clearFilters}\n              >\n                Clear\n              </CButton>\n            </div>\n          </CRow>\n        </CForm>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CTable>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">First Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Last Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Email </CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Gender</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Credits</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Stripe Account</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {users?.map((user) => {\n                    return (\n                      <CTableRow key={user._id}>\n                        <CTableDataCell>{user?.firstName}</CTableDataCell>\n                        <CTableDataCell>{user?.lastName}</CTableDataCell>\n                        <CTableDataCell>{user?.email}</CTableDataCell>\n                        <CTableDataCell>{user?.gender}</CTableDataCell>\n                        <CTableDataCell>{user?.credits}</CTableDataCell>\n\n                        <CTableDataCell>\n                          {user?.isActive ? (\n                            <CIcon className=\"text-success\" icon={cilCheckCircle} />\n                          ) : (\n                            <CIcon className=\"text-danger\" icon={cilBan} />\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          {user?.isStripeAccountActive ? (\n                            <CIcon className=\"text-success\" icon={cilCheckCircle} />\n                          ) : (\n                            <CIcon className=\"text-danger\" icon={cilBan} />\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <Link to={`/admin/users/edit/${user._id}`}>\n                            <CIcon className=\"text-secondary \" icon={cilPencil} />\n                          </Link>\n                          <Link className=\"ms-3\" to={`/admin/users/view/${user._id}`}>\n                            <CIcon className=\"text-secondary \" icon={cilMagnifyingGlass} />\n                          </Link>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol className=\"\" xs={12}>\n          <CPagination className=\"justify-content-end\" aria-label=\"Page navigation example\">\n            <CPaginationItem\n              aria-label=\"Previous\"\n              onClick={() => {\n                if (page > 1) {\n                  setPage(page - 1)\n                }\n              }}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </CPaginationItem>\n\n            {Array.from({ length: Math.ceil(total / limit) }, (_, i) => i + 1).map((_page) => (\n              <CPaginationItem active={_page === page} key={_page} onClick={() => setPage(_page)}>\n                {_page}\n              </CPaginationItem>\n            ))}\n\n            <CPaginationItem aria-label=\"Next\">\n              <span\n                aria-hidden=\"true\"\n                onClick={() => {\n                  if (page < totalPages) {\n                    setPage(page + 1)\n                  }\n                }}\n              >\n                &raquo;\n              </span>\n            </CPaginationItem>\n          </CPagination>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default UserList\n","export const cilBan = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M425.706,86.294A240,240,0,0,0,86.294,425.705,240,240,0,0,0,425.706,86.294ZM256,48A207.1,207.1,0,0,1,391.528,98.345L98.345,391.528A207.1,207.1,0,0,1,48,256C48,141.309,141.309,48,256,48Zm0,416a207.084,207.084,0,0,1-134.986-49.887l293.1-293.1A207.084,207.084,0,0,1,464,256C464,370.691,370.691,464,256,464Z' class='ci-primary'/>\"]","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["loading","text","id","className","role","users","useSelector","userList","total","totalRecords","useState","limit","page","setPage","statusFilter","setStatusFilter","emailFilter","setEmailFilter","nameFilter","setNameFilter","dispatch","useDispatch","setLoading","useEffect","userListAction","isActive","email","name","loadingCallback","userListClearAction","onSubmit","e","preventDefault","console","log","xs","value","type","placeholder","onChange","target","disabled","color","variant","onClick","scope","map","user","firstName","lastName","gender","credits","icon","cilCheckCircle","cilBan","isStripeAccountActive","to","_id","cilPencil","cilMagnifyingGlass","Array","from","length","Math","ceil","_","i","_page","active","totalPages"],"sourceRoot":""}