{"version":3,"file":"static/js/1382.01d6c7bc.chunk.js","mappings":"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","sources":["views/admin/orders/OrderComplete.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormLabel,\n  CFormTextarea,\n  CRow,\n  CFormInput,\n  CFormSelect,\n} from '@coreui/react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport {\n  serviceListAction,\n  addOrderAction,\n  orderByIdAction,\n  updateOrderAction,\n  adminUpdateOrderAction,\n} from 'src/store/actions/order'\nimport { serviceList, user, order } from 'src/store/selector/order'\nimport { ToastContainer } from 'react-toastify'\nimport { toastify } from 'src/store/services/toastify'\n\nimport 'react-toastify/dist/ReactToastify.css'\nconst OrderComplete = () => {\n  const [fromDate, setFromDate] = useState(new Date())\n  const [toDate, setToDate] = useState(new Date())\n  const [service, setService] = useState('')\n  const [code, setCode] = useState('')\n  const [status, setStatus] = useState('')\n  const [description, setDescription] = useState('')\n  const [imeiNumber, setImeiNumber] = useState('')\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const params = useParams()\n  const userId = useSelector((state) => state.user?.user?._id)\n\n  useEffect(async () => {\n    const data = await dispatch(orderByIdAction(params.id))\n    setImeiNumber(data?.imeiNumbers)\n    setService(data?.service?.name)\n    setFromDate(new Date(data?.fromDate))\n    setToDate(new Date(data?.toDate))\n    setStatus(data?.status)\n  }, [orderByIdAction])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (status === 'Completed' && code === '') return toastify('error', 'Please enter code')\n\n    dispatch(\n      adminUpdateOrderAction(\n        params.id,\n        {\n          code,\n          description,\n          status,\n\n          // userId\n        },\n        callback,\n      ),\n    )\n  }\n  const callback = () => {\n    navigate('/admin/orders')\n  }\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Update Order</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CCol className=\"m-auto mt-3 mb-5\">\n                <CForm onSubmit={submitHandler}>\n                  <CRow>\n                    <CCol className=\"pt-2\">\n                      <CFormLabel htmlFor=\"exampleFormControlInput1\">Service</CFormLabel>\n                      <CFormInput type=\"text\" value={service} disabled />\n                    </CCol>\n                    <CCol className=\"pt-2\">\n                      <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\n                        Enter IMEI Numbers\n                      </CFormLabel>\n                      <CFormTextarea\n                        id=\"exampleFormControlTextarea1\"\n                        rows=\"3\"\n                        value={imeiNumber}\n                        placeholder=\"seprate IMEI number with , ex: 358265010779665,358265010779665   \"\n                        onChange={(e) => setImeiNumber(e.target.value)}\n                        disabled\n                      ></CFormTextarea>\n                      {/* <span>seprate IMEI number with \",\"</span> */}\n                    </CCol>\n                  </CRow>\n                  <CRow>\n                    <CCol className=\"pt-2\">\n                      <CFormLabel>Start Date</CFormLabel>\n                      <DatePicker\n                        selected={new Date(fromDate) ?? null}\n                        onChange={(date) => setFromDate(date)}\n                        disabled\n                      />\n                    </CCol>\n                    <CCol className=\"pt-2\">\n                      <CFormLabel htmlFor=\"exampleFormControlInput1\">Code</CFormLabel>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Enter code\"\n                        value={code}\n                        onChange={(e) => setCode(e.target.value)}\n                      />\n                    </CCol>\n                  </CRow>\n                  <CRow className=\"pt-2\">\n                    <CCol className=\"pt-2\" sm={6}>\n                      <CFormLabel htmlFor=\"exampleFormControlText\">Select Status</CFormLabel>\n\n                      <CFormSelect\n                        onChange={(e) => setStatus(e.target.value)}\n                        required\n                        value={status}\n                        id=\"validationCustom01\"\n                      >\n                        <option value=\"Pending\">Pending</option>\n                        <option value=\"Confirmed\">Confirmed</option>\n                        <option value=\"InProgress\">In Progress</option>\n                        <option value=\"Completed\">Completed</option>\n                        <option value=\"Rejected\">Rejected</option>\n                      </CFormSelect>\n                    </CCol>\n                  </CRow>\n                  <div className=\"text-end pt-4\">\n                    <CButton type=\"submit\" color=\"secondary\" variant=\"outline\" className=\"text-end\">\n                      Save\n                    </CButton>\n                  </div>\n                </CForm>\n              </CCol>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default OrderComplete\n"],"names":["useState","Date","fromDate","setFromDate","setToDate","service","setService","code","setCode","status","setStatus","description","imeiNumber","setImeiNumber","dispatch","useDispatch","navigate","useNavigate","params","useParams","useSelector","state","user","_id","useEffect","orderByIdAction","id","data","imeiNumbers","name","toDate","callback","xs","className","onSubmit","e","preventDefault","toastify","adminUpdateOrderAction","htmlFor","type","value","disabled","rows","placeholder","onChange","target","selected","date","sm","required","color","variant"],"sourceRoot":""}