{"version":3,"file":"static/js/5713.b29dceae.chunk.js","mappings":"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","sources":["store/services/category.js","store/actions/category.js","store/services/service.js","store/actions/service.js","store/selector/category.js","views/admin/services/AddService.js"],"sourcesContent":["import { apiUrl } from 'src/configs/config'\nimport request from 'src/configs/request'\nimport { store } from '../store'\nconst setHeader = () => {\n  const { token } = store.getState().user\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n}\n\nexport const addCategory = (obj) => {\n  return request.post(apiUrl + 'categories/create', obj, setHeader())\n}\n\nexport const categoryList = (obj) => {\n  return request.get(apiUrl + 'categories/list', setHeader())\n}\n\nexport const categoryById = (id) => {\n  return request.get(apiUrl + `categories/${id}`, setHeader())\n}\n\nexport const updateCategory = (id, obj) => {\n  return request.patch(apiUrl + `categories/${id}`, obj, setHeader())\n}\n","import {\n  addCategory,\n  categoryList,\n  categoryById,\n  updateCategory,\n} from 'src/store/services/category'\nimport { toastify } from '../services/toastify'\n\nexport const addCategoryAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await addCategory(obj)\n    if (res.status === 201) {\n      toastify('success', res?.data?.data.message)\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const categoryListAction = () => async (dispatch) => {\n  try {\n    const res = await categoryList()\n    if (res.status === 200) {\n      dispatch({\n        type: 'CategoryList',\n        payload: {\n          categories: res.data.data.categories,\n        },\n      })\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const categoryByIdAction = (id) => async (dispatch) => {\n  try {\n    const res = await categoryById(id)\n    return res.data?.data?.category\n    // if (res.status === 200) {\n    //   dispatch({\n    //     type: 'CategoryList',\n    //     payload: {\n    //       categories: res.data.data.categories,\n    //     },\n    //   })\n    // }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const updateCategoryAction = (id, obj, callback) => async (dispatch) => {\n  try {\n    const res = await updateCategory(id, obj)\n    if (res.status === 200) {\n      toastify('success', res?.data?.data.message)\n\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n","import { apiUrl } from 'src/configs/config'\nimport request from 'src/configs/request'\nimport { store } from '../store'\n\nconst setHeader = () => {\n  const { token } = store.getState().user\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n}\n\nexport const serviceList = (obj) => {\n  return request.post(apiUrl + 'services/list', obj, setHeader())\n}\n\nexport const addService = (obj) => {\n  return request.post(apiUrl + 'services', obj, setHeader())\n}\n\nexport const serviceById = (id) => {\n  return request.get(apiUrl + `services/${id}`, setHeader())\n}\n\nexport const updateService = (id, obj) => {\n  return request.patch(apiUrl + `services/${id}`, obj, setHeader())\n}\n","import { addService, serviceList, serviceById, updateService } from 'src/store/services/service'\nimport { toastify } from '../services/toastify'\n\nexport const serviceListAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await serviceList(obj)\n    if (res.status === 201) {\n      dispatch({\n        type: 'ServiceList',\n        payload: {\n          services: res.data.data.services,\n          total: res.data.data.total,\n        },\n      })\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  } finally {\n    if (callback) {\n      callback()\n    }\n  }\n}\n\nexport const serviceListClearAction = (obj, callback) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'ServiceListClear',\n      payload: {\n        services: [],\n        total: 0,\n      },\n    })\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const addServiceAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await addService(obj)\n    if (res.status === 201) {\n      callback()\n      toastify('success', res?.data?.data.message)\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const serviceByIdAction = (id) => async (dispatch) => {\n  try {\n    const res = await serviceById(id)\n    return res.data.data.service\n    if (res.status === 201) {\n      callback()\n      toastify('success', res?.data?.data.message)\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const updateServiceAction = (id, obj, callback) => async (dispatch) => {\n  try {\n    const res = await updateService(id, obj)\n    if (res.status === 200) {\n      toastify('success', res?.data?.data.message)\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n","export const categoryList = (state) => state?.category?.categories\n","import React, { useEffect, useState } from 'react'\n\nimport ReactQuill from 'react-quill'\n\nimport 'react-quill/dist/quill.snow.css'\n\nimport CIcon from '@coreui/icons-react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CFormSwitch,\n  CFormCheck,\n  CContainer,\n  CTable,\n  CTableBody,\n  CFormSelect,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CFormTextarea,\n  CTableRow,\n} from '@coreui/react'\nimport { ToastContainer } from 'react-toastify'\nimport { toastify } from 'src/store/services/toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { cilDelete, cilMedicalCross, cilArrowCircleLeft } from '@coreui/icons'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { addServiceAction, serviceByIdAction, updateServiceAction } from 'src/store/actions/service'\nimport { addCategoryAction, categoryListAction } from 'src/store/actions/category'\nimport { categoryList } from 'src/store/selector/category'\n\nconst AddService = () => {\n  const categories = useSelector(categoryList)\n\n  const [serviceType, setServicetype] = useState('IMEI')\n  const [fieldType, setFieldType] = useState('SINGLE')\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState('')\n  const [supplier, setSupplier] = useState('')\n\n  const [costPrice, setCostPrice] = useState('')\n  const [deliveryTime, setDeliveryTime] = useState('')\n  const [orderCancelTime, setOrderCancelTime] = useState('')\n  const [orderVerfiyTime, setOrderVerfiyTime] = useState('')\n  const [redirectUrl, setRedirectUrl] = useState('')\n  const [responseDelayTime, setResponseDelayTime] = useState('')\n  const [dealerPrice, setDealerPrice] = useState('')\n  const [resellerPrice, setResellerPrice] = useState('')\n  const [userPrice, setUserPrice] = useState('')\n  const [tremsCond, setTremsCond] = useState(true)\n  const [orderVerification, setOrderVerification] = useState(false)\n  const [pendingOrderCancel, setPendingOrderCancel] = useState(false)\n  const [duplicateIMEI, setDuplicateIMEI] = useState(false)\n  const [disable, setDisable] = useState(false)\n  const [customFields, setCustomFields] = useState([])\n  const [fieldName, setFieldName] = useState('')\n  const [fieldDataType, setFieldDataType] = useState('')\n  const [features, setFeatures] = useState([])\n  const [seoName, setSeoName] = useState('')\n  const [seoHtml, setSeoHtml] = useState('')\n  const [seoUrl, setSeoUrl] = useState('')\n\n  const [addCategoryCheck, setAddCategoryCheck] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState('')\n  const [categoryDetail, setCategoryDetail] = useState('')\n\n  useEffect(async () => {\n    if (params.mode !== 'add') {\n      const data = await dispatch(serviceByIdAction(params.mode))\n      console.log(data)\n      setServicetype(data?.serviceType)\n      setName(data?.name)\n      setPrice(data?.price)\n      setSupplier(data?.price)\n      setCostPrice(data?.costPrice)\n      setDeliveryTime(data?.deliveryTime)\n      setOrderCancelTime(data?.orderCancelTime)\n      setOrderVerfiyTime(data?.orderVerfiyTime)\n      setRedirectUrl(data?.redirectUrl)\n      setResponseDelayTime(data?.responseDelayTime)\n      setDealerPrice(data?.credits?.DEALER)\n      setResellerPrice(data?.credits.RESELLER)\n      setUserPrice(data?.credits.USER)\n      setSeoName(data?.seoInfo?.name)\n      setSeoHtml(data?.seoInfo.htmlTitle)\n      setSeoUrl(data?.seoInfo.urlName)\n      // setCategoryName(data?.categoryInfo?.name)\n      // setCategoryHtml(data?.categoryInfo?.htmlTitle)\n      // setCategoryUrl(data?.categoryInfo?.urlName)\n      setFieldType(data?.fieldType?.type)\n      setCustomFields(data?.fieldType?.customFields)\n      setFeatures(data?.features)\n\n      setTremsCond(data?.tremsCond)\n      setOrderVerification(data?.orderVerification)\n      setPendingOrderCancel(data?.pendingOrderCancel)\n      setDuplicateIMEI(data?.duplicateIMEI)\n      setDisable(data?.isDeleted)\n      setSelectedCategory(data?.categoryId?._id)\n      setCategoryDetail(data?.categoryId)\n    }\n  }, [serviceByIdAction])\n\n  const [serviceDesc, setServiceDesc] = useState('')\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const params = useParams()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    if (selectedCategory === '') return toastify('error', 'Please select atleast one category')\n\n    const data = {\n      name: name,\n      description: serviceDesc,\n      isDeleted: disable,\n      serviceType,\n      fieldType: {\n        type: fieldType,\n        customFields: customFields,\n      },\n      credits: {\n        DEALER: dealerPrice,\n        RESELLER: resellerPrice,\n        USER: userPrice,\n      },\n      price: price,\n      costPrice: costPrice,\n      supplier: supplier,\n      deliveryTime: deliveryTime,\n      redirectUrl: redirectUrl,\n      responseDelayTime: responseDelayTime,\n      // serviceImage:\n      // detail:\n      tremsCond: tremsCond,\n      pendingOrderCancel: pendingOrderCancel,\n      orderCancelTime: orderCancelTime,\n      orderVerification: orderVerification,\n      orderVerfiyTime: orderVerfiyTime,\n      duplicateIMEI: duplicateIMEI,\n      features: features,\n      seoInfo: {\n        name: seoName,\n        htmlTitle: seoHtml,\n        urlName: seoUrl,\n        tags: [],\n        keywords: [],\n      },\n      categoryId: selectedCategory,\n      // categoryInfo: {\n      //   name: categoryName,\n      //   htmlTitle: categoryHtml,\n      //   urlName: categoryUrl,\n      //   tags: [],\n      //   keywords: [],\n      // },\n    }\n\n    if (params.mode === 'add') {\n      dispatch(addServiceAction(data, callback))\n    } else {\n      dispatch(updateServiceAction(params.mode, data, callback))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(categoryListAction())\n  }, [categoryListAction])\n\n  const callback = () => {\n    navigate('/admin/services')\n  }\n\n  const addField = () => {\n    if (fieldName === '' || fieldType === '') return toastify('error', 'Please fill  fields')\n    setCustomFields([\n      ...customFields,\n      { name: fieldName, dataType: fieldDataType, id: Math.floor(100000 + Math.random() * 900000) },\n    ])\n    setFieldName('')\n    setFieldDataType('')\n  }\n\n  const deleteField = (id) => {\n    const updatedFields = customFields.filter((item) => item.id !== id)\n    setCustomFields(updatedFields)\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CForm onSubmit={submitHandler}>\n            <CCard className=\"mb-4\">\n              <CCardHeader className=\"d-flex\">\n                <div className=\"mt-2\">\n                  <strong>{params.mode === 'add' ? 'Add Service' : 'Edit Service'} </strong>\n                </div>\n                <div className=\"ms-auto\">\n                  <CButton className=\"m-auto\" type=\"submit\" color=\"light\">\n                    Save\n                  </CButton>\n                </div>\n              </CCardHeader>\n              <CCardBody>\n                <CContainer className=\" mt-3 mb-5\">\n                  <CRow className=\" justify-content-center \">\n                    <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                      <li className=\"nav-item\" role=\"presentation\">\n                        <button\n                          className=\"nav-link active\"\n                          id=\"home-tab\"\n                          data-bs-toggle=\"tab\"\n                          data-bs-target=\"#home\"\n                          type=\"button\"\n                          role=\"tab\"\n                          aria-controls=\"home\"\n                          aria-selected=\"true\"\n                        >\n                          Genral\n                        </button>\n                      </li>\n                      <li className=\"nav-item\" role=\"presentation\">\n                        <button\n                          className=\"nav-link\"\n                          id=\"detail-tab\"\n                          data-bs-toggle=\"tab\"\n                          data-bs-target=\"#detail\"\n                          type=\"button\"\n                          role=\"tab\"\n                          aria-controls=\"detail\"\n                          aria-selected=\"false\"\n                        >\n                          Detail\n                        </button>\n                      </li>\n                      <li className=\"nav-item\" role=\"presentation\">\n                        <button\n                          className=\"nav-link\"\n                          id=\"contact-tab\"\n                          data-bs-toggle=\"tab\"\n                          data-bs-target=\"#contact\"\n                          type=\"button\"\n                          role=\"tab\"\n                          aria-controls=\"contact\"\n                          aria-selected=\"false\"\n                        >\n                          Seo\n                        </button>\n                      </li>\n                    </ul>\n                    <div className=\"tab-content\" id=\"myTabContent\">\n                      <div\n                        className=\"tab-pane fade show active\"\n                        id=\"home\"\n                        role=\"tabpanel\"\n                        aria-labelledby=\"home-tab\"\n                      >\n                        <CRow className=\" justify-content-center mt-3\">\n                          <CCol>\n                            <div className=\"d-flex mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Service Type\n                              </CFormLabel>\n\n                              <div className=\"ms-2\">\n                                {serviceType === 'IMEI' ? (\n                                  <CFormCheck\n                                    //   className=\"ps-5\"\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault11\"\n                                    id=\"IMEI1\"\n                                    label=\"IMEI\"\n                                    onChange={(e) => setServicetype(e.target.value)}\n                                    value=\"IMEI\"\n                                    defaultChecked\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    //   className=\"ps-5\"\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault11\"\n                                    id=\"IMEI1\"\n                                    label=\"IMEI\"\n                                    onChange={(e) => setServicetype(e.target.value)}\n                                    value=\"IMEI\"\n                                  />\n                                )}\n                              </div>\n                              <div>\n                                {serviceType === 'SERVER' ? (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"ms-2\"\n                                    name=\"flexRadioDefault11\"\n                                    id=\"Server1\"\n                                    label=\"Server\"\n                                    onChange={(e) => setServicetype(e.target.value)}\n                                    value=\"SERVER\"\n                                    defaultChecked\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"ms-2\"\n                                    name=\"flexRadioDefault11\"\n                                    id=\"Server1\"\n                                    label=\"Server\"\n                                    onChange={(e) => setServicetype(e.target.value)}\n                                    value=\"SERVER\"\n                                  />\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Service Name\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={name}\n                                required\n                                placeholder=\"Enter Service Name\"\n                                onChange={(e) => setName(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Price</CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={price}\n                                required\n                                placeholder=\"Enter Price\"\n                                onChange={(e) => setPrice(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Cost Price</CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={costPrice}\n                                required\n                                placeholder=\"Enter Cost Price\"\n                                onChange={(e) => setCostPrice(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Supplier</CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={supplier}\n                                placeholder=\"Enter Supplier\"\n                                onChange={(e) => setSupplier(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Redirect Url\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={redirectUrl}\n                                placeholder=\"Enter Redirect Url\"\n                                onChange={(e) => setRedirectUrl(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormSwitch\n                                label=\"Terms & conditions\"\n                                checked={tremsCond}\n                                id=\"formSwitchCheckChecked\"\n                                onChange={(e) => setTremsCond(!tremsCond)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormSwitch\n                                label=\"Pending Order Cancellation\"\n                                id=\"formSwitchCheckChecked\"\n                                checked={pendingOrderCancel}\n                                onChange={(e) => setPendingOrderCancel(!pendingOrderCancel)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormSwitch\n                                label=\"Order Varification\"\n                                id=\"formSwitchCheckChecked\"\n                                checked={orderVerification}\n                                onChange={(e) => setOrderVerification(!orderVerification)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormSwitch\n                                label=\"Allow Duplicate IMEI\"\n                                id=\"formSwitchCheckChecked\"\n                                checked={duplicateIMEI}\n                                onChange={(e) => setDuplicateIMEI(!duplicateIMEI)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormSwitch\n                                label=\"Disable\"\n                                checked={disable}\n                                id=\"formSwitchCheckChecked\"\n                                onChange={(e) => setDisable(!disable)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Features</CFormLabel>\n\n                              <CFormCheck\n                                id=\"feature1\"\n                                label=\"Refund available if code is not found\"\n                                value=\"Refund available if code is not found\"\n                                checked={\n                                  features?.find(\n                                    (item) => item === 'Refund available if code is not found',\n                                  )\n                                    ? true\n                                    : false\n                                }\n                                onChange={(e) =>\n                                  e.target.checked\n                                    ? setFeatures([...features, e.target.value])\n                                    : setFeatures(\n                                        features?.filter((item) => item !== e.target.value),\n                                      )\n                                }\n                              />\n                              <CFormCheck\n                                id=\"feature2\"\n                                label=\"Service availble 24x7\"\n                                value=\"Service availble 24x7\"\n                                checked={\n                                  features?.find((item) => item === 'Service availble 24x7')\n                                    ? true\n                                    : false\n                                }\n                                onChange={(e) =>\n                                  e.target.checked\n                                    ? setFeatures([...features, e.target.value])\n                                    : setFeatures(\n                                        features?.filter((item) => item !== e.target.value),\n                                      )\n                                }\n                              />\n                              <CFormCheck\n                                id=\"feature3\"\n                                label=\"Unlock guranteed\"\n                                value=\"Unlock guranteed\"\n                                checked={\n                                  features?.find((item) => item === 'Unlock guranteed')\n                                    ? true\n                                    : false\n                                }\n                                onChange={(e) =>\n                                  e.target.checked\n                                    ? setFeatures([...features, e.target.value])\n                                    : setFeatures(\n                                        features?.filter((item) => item !== e.target.value),\n                                      )\n                                }\n                              />\n                              <CFormCheck\n                                id=\"feature4\"\n                                label=\"No refund for bad requests\"\n                                value=\"No refund for bad requests\"\n                                checked={\n                                  features?.find((item) => item === 'No refund for bad requests')\n                                    ? true\n                                    : false\n                                }\n                                onChange={(e) =>\n                                  e.target.checked\n                                    ? setFeatures([...features, e.target.value])\n                                    : setFeatures(\n                                        features?.filter((item) => item !== e.target.value),\n                                      )\n                                }\n                              />\n                              <CFormCheck\n                                id=\"feature5\"\n                                label=\"Working on business days only\"\n                                value=\"Working on business days only\"\n                                checked={\n                                  features?.find((item) => item === 'Working on business days only')\n                                    ? true\n                                    : false\n                                }\n                                onChange={(e) =>\n                                  e.target.checked\n                                    ? setFeatures([...features, e.target.value])\n                                    : setFeatures(\n                                        features?.filter((item) => item !== e.target.value),\n                                      )\n                                }\n                              />\n                            </div>\n                          </CCol>\n                          <CCol>\n                            <div className=\"d-flex mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Field Type</CFormLabel>\n\n                              <div className=\"ms-2\">\n                                {fieldType === 'SINGLE' ? (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"me-1\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Single1\"\n                                    label=\"Single\"\n                                    value=\"SINGLE\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                    defaultChecked\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"me-1\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Single1\"\n                                    label=\"Single\"\n                                    value=\"SINGLE\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                    // defaultChecked\n                                  />\n                                )}\n                              </div>\n                              <div>\n                                {fieldType === 'BOTH' ? (\n                                  <CFormCheck\n                                    className=\"me-1\"\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Both1\"\n                                    label=\"Both\"\n                                    value=\"BOTH\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                    defaultChecked\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    className=\"me-1\"\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Both1\"\n                                    label=\"Both\"\n                                    value=\"BOTH\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                  />\n                                )}\n                              </div>\n                              <div>\n                                {fieldType === 'MULTIPLE' ? (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"me-1\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Multiple1\"\n                                    label=\"Multiple\"\n                                    value=\"MULTIPLE\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                    defaultChecked\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    className=\"me-1\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"Multiple1\"\n                                    label=\"Multiple\"\n                                    value=\"MULTIPLE\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                  />\n                                )}\n                              </div>\n                              <div>\n                                {fieldType === 'CUSTOM' ? (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"custom1\"\n                                    label=\"Custom\"\n                                    value=\"CUSTOM\"\n                                    defaultChecked\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                  />\n                                ) : (\n                                  <CFormCheck\n                                    type=\"radio\"\n                                    name=\"flexRadioDefault\"\n                                    id=\"custom1\"\n                                    label=\"Custom\"\n                                    value=\"CUSTOM\"\n                                    onChange={(e) => setFieldType(e.target.value)}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                            {fieldType === 'CUSTOM' ? (\n                              <>\n                                <p>Pleae create your custom field</p>\n\n                                <div className=\"d-flex\">\n                                  <div className=\"mb-3\">\n                                    <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                      Field Name\n                                    </CFormLabel>\n                                    <CFormInput\n                                      type=\"text\"\n                                      placeholder=\"Enter Field Name\"\n                                      value={fieldName}\n                                      onChange={(e) => setFieldName(e.target.value)}\n                                    />\n                                  </div>\n                                  <div className=\"mb-3\">\n                                    <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                      Data Type\n                                    </CFormLabel>\n                                    <CFormInput\n                                      type=\"text\"\n                                      value={fieldDataType}\n                                      placeholder=\"i.e number/text\"\n                                      onChange={(e) => setFieldDataType(e.target.value)}\n                                    />\n                                  </div>\n\n                                  <div className=\"mt-2 ms-1\">\n                                    <CButton\n                                      className=\"mt-4 p-2\"\n                                      color=\"light\"\n                                      size=\"sm\"\n                                      onClick={() => addField()}\n                                    >\n                                      <CIcon icon={cilMedicalCross} />\n                                    </CButton>\n                                  </div>\n                                </div>\n\n                                <CTable>\n                                  <CTableHead>\n                                    <CTableRow>\n                                      <CTableHeaderCell scope=\"col\">Field Name</CTableHeaderCell>\n                                      <CTableHeaderCell scope=\"col\">Data Type</CTableHeaderCell>\n                                      <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                                    </CTableRow>\n                                  </CTableHead>\n                                  <CTableBody>\n                                    {customFields?.map((field, index) => (\n                                      <CTableRow key={index}>\n                                        <CTableHeaderCell>{field?.name}</CTableHeaderCell>\n                                        <CTableDataCell>{field.dataType}</CTableDataCell>\n\n                                        <CTableDataCell>\n                                          <CButton\n                                            color=\"light\"\n                                            size=\"sm\"\n                                            onClick={() => deleteField(field.id)}\n                                          >\n                                            <CIcon icon={cilDelete} />\n                                          </CButton>\n                                        </CTableDataCell>\n                                      </CTableRow>\n                                    ))}\n                                  </CTableBody>\n                                </CTable>\n                              </>\n                            ) : null}\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Delivery Time\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={deliveryTime}\n                                placeholder=\"Enter Delivery Time\"\n                                onChange={(e) => setDeliveryTime(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Response Delay Time\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={responseDelayTime}\n                                placeholder=\"Enter Response Delay Time\"\n                                onChange={(e) => setResponseDelayTime(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Reseller</CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={resellerPrice}\n                                placeholder=\"Enter Reseller Price\"\n                                onChange={(e) => setResellerPrice(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Dealer</CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={dealerPrice}\n                                placeholder=\"Enter Dealer Price\"\n                                onChange={(e) => setDealerPrice(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">User</CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={userPrice}\n                                placeholder=\"Enter User Price\"\n                                onChange={(e) => setUserPrice(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Order Cancel Time\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={orderCancelTime}\n                                placeholder=\"Enter Order Cancel Time\"\n                                onChange={(e) => setOrderCancelTime(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Order Verfiy Time\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"number\"\n                                value={orderVerfiyTime}\n                                placeholder=\"Enter Order Verify Time\"\n                                onChange={(e) => setOrderVerfiyTime(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\" mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Select Category\n                              </CFormLabel>\n                              <CFormSelect\n                                aria-label=\"Default select example\"\n                                onChange={(e) => setSelectedCategory(e.target.value)}\n                              >\n                                <option value=\"\" disabled hidden>\n                                  {categoryDetail?.name}\n                                </option>\n                                <option value=\"\" disabled>\n                                  Select Category\n                                </option>\n                                {categories?.map((category) => (\n                                  <option key={category?._id} value={category?._id}>\n                                    {category?.name}\n                                  </option>\n                                ))}\n                              </CFormSelect>\n                            </div>\n                          </CCol>\n                        </CRow>\n                      </div>\n                      <div\n                        className=\"tab-pane fade mt-3\"\n                        id=\"detail\"\n                        role=\"tabpanel\"\n                        aria-labelledby=\"detail-tab\"\n                      >\n                        <ReactQuill theme=\"snow\" value={serviceDesc} onChange={setServiceDesc} />\n                      </div>\n                      <div\n                        className=\"tab-pane fade\"\n                        id=\"contact\"\n                        role=\"tabpanel\"\n                        aria-labelledby=\"contact-tab\"\n                      >\n                        <CRow>\n                          <CCol>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">File Name</CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={seoName}\n                                placeholder=\"Enter File Name\"\n                                onChange={(e) => setSeoName(e.target.value)}\n                              />\n                            </div>\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">Tag</CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={seoHtml}\n                                placeholder=\"Enter Html Title\"\n                                onChange={(e) => setSeoHtml(e.target.value)}\n                              />\n                            </div>\n\n                            <div className=\"mb-3\">\n                              <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\n                                Description\n                              </CFormLabel>\n                              <CFormTextarea\n                                id=\"exampleFormControlTextarea1\"\n                                rows=\"3\"\n                                value={seoUrl}\n                                placeholder=\"..............\"\n                                onChange={(e) => setSeoUrl(e.target.value)}\n                              ></CFormTextarea>\n                              {/* <span>seprate IMEI number with \",\"</span> */}\n                            </div>\n                            {/* <div className=\"mb-3\">\n\n                              <CFormLabel htmlFor=\"exampleFormControlInput1\">\n                                Description\n                              </CFormLabel>\n                              <CFormInput\n                                type=\"text\"\n                                value={seoUrl}\n                                placeholder=\"Enter Seo Name\"\n                                onChange={(e) => setSeoUrl(e.target.value)}\n                              />\n                            </div> */}\n                          </CCol>\n                          <CCol></CCol>\n                        </CRow>\n                      </div>\n                    </div>\n                  </CRow>\n                </CContainer>\n              </CCardBody>\n            </CCard>\n          </CForm>\n        </CCol>\n      </CRow>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default AddService\n"],"names":["setHeader","token","store","user","headers","Authorization","addCategory","obj","request","apiUrl","categoryById","id","updateCategory","addCategoryAction","callback","dispatch","res","status","toastify","data","message","response","err","categoryListAction","type","payload","categories","categoryByIdAction","category","updateCategoryAction","serviceList","addService","serviceById","updateService","serviceListAction","services","total","serviceListClearAction","addServiceAction","serviceByIdAction","service","updateServiceAction","categoryList","state","useSelector","useState","serviceType","setServicetype","fieldType","setFieldType","name","setName","price","setPrice","supplier","setSupplier","costPrice","setCostPrice","deliveryTime","setDeliveryTime","orderCancelTime","setOrderCancelTime","orderVerfiyTime","setOrderVerfiyTime","redirectUrl","setRedirectUrl","responseDelayTime","setResponseDelayTime","dealerPrice","setDealerPrice","resellerPrice","setResellerPrice","userPrice","setUserPrice","tremsCond","setTremsCond","orderVerification","setOrderVerification","pendingOrderCancel","setPendingOrderCancel","duplicateIMEI","setDuplicateIMEI","disable","setDisable","customFields","setCustomFields","fieldName","setFieldName","fieldDataType","setFieldDataType","features","setFeatures","seoName","setSeoName","seoHtml","setSeoHtml","seoUrl","setSeoUrl","selectedCategory","setSelectedCategory","categoryDetail","setCategoryDetail","useEffect","params","mode","console","log","credits","DEALER","RESELLER","USER","seoInfo","htmlTitle","urlName","isDeleted","categoryId","_id","serviceDesc","setServiceDesc","useDispatch","navigate","useNavigate","useParams","xs","onSubmit","e","preventDefault","description","tags","keywords","className","color","role","htmlFor","label","onChange","target","value","defaultChecked","required","placeholder","checked","find","item","filter","size","onClick","dataType","Math","floor","random","addField","icon","cilMedicalCross","scope","map","field","index","updatedFields","deleteField","cilDelete","disabled","hidden","theme","rows"],"sourceRoot":""}