{"version":3,"file":"static/js/6084.7fdb5de2.chunk.js","mappings":"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","sources":["components/Loader.js","store/services/service.js","store/actions/service.js","store/selector/service.js","views/admin/services/ServiceList.js","../node_modules/@coreui/icons/js/free/cil-ban.js","../node_modules/@coreui/icons/js/free/cil-check-circle.js"],"sourcesContent":["import React from 'react'\n\nfunction Loader({ loading = false, text = '' }) {\n  return (\n    <>\n      {loading && (\n        <div id=\"overlay\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Loader\n","import { apiUrl } from 'src/configs/config'\nimport request from 'src/configs/request'\nimport { store } from '../store'\n\nconst setHeader = () => {\n  const { token } = store.getState().user\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n}\n\nexport const serviceList = (obj) => {\n  return request.post(apiUrl + 'services/list', obj, setHeader())\n}\n\nexport const addService = (obj) => {\n  return request.post(apiUrl + 'services', obj, setHeader())\n}\n\nexport const serviceById = (id) => {\n  return request.get(apiUrl + `services/${id}`, setHeader())\n}\n\nexport const updateService = (id, obj) => {\n  return request.patch(apiUrl + `services/${id}`, obj, setHeader())\n}\n","import { addService, serviceList, serviceById, updateService } from 'src/store/services/service'\nimport { toastify } from '../services/toastify'\n\nexport const serviceListAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await serviceList(obj)\n    if (res.status === 201) {\n      dispatch({\n        type: 'ServiceList',\n        payload: {\n          services: res.data.data.services,\n          total: res.data.data.total,\n        },\n      })\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  } finally {\n    if (callback) {\n      callback()\n    }\n  }\n}\n\nexport const serviceListClearAction = (obj, callback) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'ServiceListClear',\n      payload: {\n        services: [],\n        total: 0,\n      },\n    })\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const addServiceAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await addService(obj)\n    if (res.status === 201) {\n      callback()\n      toastify('success', res?.data?.data.message)\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const serviceByIdAction = (id) => async (dispatch) => {\n  try {\n    const res = await serviceById(id)\n    return res.data.data.service\n    if (res.status === 201) {\n      callback()\n      toastify('success', res?.data?.data.message)\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const updateServiceAction = (id, obj, callback) => async (dispatch) => {\n  try {\n    const res = await updateService(id, obj)\n    if (res.status === 200) {\n      toastify('success', res?.data?.data.message)\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n","export const serviceList = (state) => state?.service?.services\nexport const totalRecords = (state) => state?.service?.total\n","import React, { useEffect, useState } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CForm,\n  CTooltip,\n  CFormInput,\n  CFormSelect,\n  CButton,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport { cilPencil, cilPlus, cilMagnifyingGlass, cilCheckCircle, cilBan } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serviceList, totalRecords } from 'src/store/selector/service'\nimport { serviceListAction, serviceListClearAction } from 'src/store/actions/service'\nimport { Link } from 'react-router-dom'\nimport Loader from 'src/components/Loader'\n\nconst ServiceList = () => {\n  const services = useSelector(serviceList)\n  const dispatch = useDispatch()\n  const total = useSelector(totalRecords)\n  const [limit, setLimit] = useState(10)\n  const [page, setPage] = useState(1)\n  const [statusFilter, setStatusFilter] = useState(null)\n  const [serviceTypeFilter, setServiceTypeFilter] = useState('')\n  const [serviceNameFilter, setServiceNameFilter] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n\n    dispatch(\n      serviceListAction(\n        {\n          page,\n          limit,\n          isDeleted: statusFilter,\n          name: serviceNameFilter,\n          serviceType: serviceTypeFilter,\n        },\n        loadingCallback,\n      ),\n    )\n\n    return () => {\n      dispatch(serviceListClearAction())\n    }\n  }, [serviceListAction, page])\n\n  const loadingCallback = () => {\n    setLoading(false)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setLoading(true)\n\n    dispatch(\n      serviceListAction(\n        {\n          page,\n          limit,\n          isDeleted: statusFilter,\n          name: serviceNameFilter,\n          serviceType: serviceTypeFilter,\n        },\n        loadingCallback,\n      ),\n    )\n  }\n\n  const clearFilters = () => {\n    setServiceNameFilter('')\n    setStatusFilter('')\n    setServiceTypeFilter('')\n    setLoading(true)\n\n    dispatch(\n      serviceListAction(\n        {\n          page,\n          limit,\n          isDeleted: '',\n          name: '',\n          serviceType: '',\n        },\n        loadingCallback,\n      ),\n    )\n  }\n\n  return (\n    <>\n      <Loader loading={loading}></Loader>\n      <CRow>\n        <CForm onSubmit={handleSubmit}>\n          <CRow className=\" row pb-3\">\n            <div className=\"col-md-3\">\n              <CFormInput\n                value={serviceNameFilter}\n                type=\"text\"\n                placeholder=\"Service Name\"\n                onChange={(e) => setServiceNameFilter(e.target.value)}\n              />\n            </div>\n            <div className=\"col-md-3 \">\n              <CFormSelect\n                aria-label=\"Default select example\"\n                value={serviceTypeFilter}\n                onChange={(e) => setServiceTypeFilter(e.target.value)}\n              >\n                <option disabled value=\"\">\n                  Service Type\n                </option>\n                <option value=\"IMEI\">IMEI</option>\n                <option value=\"SERVER\">SERVER</option>\n              </CFormSelect>\n            </div>\n            <div className=\"col-md-3 \">\n              <CFormSelect\n                aria-label=\"Default select example\"\n                value={statusFilter}\n                onChange={(e) => setStatusFilter(e.target.value)}\n              >\n                <option disabled value=\"\">\n                  {' '}\n                  Status\n                </option>\n                <option value={false}>Active</option>\n                <option value={true}>Disabled</option>\n              </CFormSelect>\n            </div>\n\n            <div className=\"col-md-3 text-end ms-auto\">\n              <CButton type=\"submit\" color=\"secondary\" variant=\"outline\">\n                Search\n              </CButton>\n              <CButton\n                className=\"ms-2\"\n                type=\"button\"\n                color=\"secondary\"\n                variant=\"outline\"\n                onClick={clearFilters}\n              >\n                Clear\n              </CButton>\n            </div>\n          </CRow>\n        </CForm>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader className=\"text-end\">\n              <Link to=\"/admin/services/add\">\n                {/* <CTooltip content=\"Add New Service\">\n                  <CIcon\n                    className=\"me-3 border border-secondary text-secondary rounded-circle\"\n                    icon={cilPlus}\n                  />\n                </CTooltip> */}\n                <CButton type=\"submit\" color=\"secondary\" variant=\"outline\">\n                  Add New\n                </CButton>\n              </Link>\n            </CCardHeader>\n            <CCardBody>\n              <CTable>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Service Type</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Category Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Service Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Price</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Cost Price</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Supplier</CTableHeaderCell>\n                    {/* <CTableHeaderCell scope=\"col\">Order Veriy Time</CTableHeaderCell> */}\n                    {/* <CTableHeaderCell scope=\"col\">Order Cancel Time</CTableHeaderCell> */}\n                    <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {services?.map((service) => {\n                    return (\n                      <CTableRow key={service._id}>\n                        {/* <CTableHeaderCell scope=\"row\">1</CTableHeaderCell> */}\n                        <CTableDataCell>{service?.serviceType}</CTableDataCell>\n                        <CTableDataCell>{service?.categoryId?.name}</CTableDataCell>\n                        <CTableDataCell>{service?.name}</CTableDataCell>\n                        <CTableDataCell>{service?.price}</CTableDataCell>\n                        <CTableDataCell>{service?.costPrice}</CTableDataCell>\n                        <CTableDataCell>{service?.supplier}</CTableDataCell>\n\n                        {/* <CTableDataCell>{service?.orderVerfiyTime}</CTableDataCell> */}\n                        {/* <CTableDataCell>{service?.orderCancelTime}</CTableDataCell> */}\n\n                        <CTableDataCell>\n                          {service?.isDeleted === false ? (\n                            <CIcon className=\"text-success ms-2\" icon={cilCheckCircle} />\n                          ) : (\n                            <CIcon className=\"text-danger ms-2\" icon={cilBan} />\n                          )}\n                        </CTableDataCell>\n\n                        <CTableDataCell>\n                          <Link to={`/admin/services/${service._id}`}>\n                            <CIcon className=\"text-secondary\" icon={cilPencil} />\n                          </Link>\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  })}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol className=\"\" xs={12}>\n          <CPagination className=\"justify-content-end\" aria-label=\"Page navigation example\">\n            <CPaginationItem\n              aria-label=\"Previous\"\n              onClick={() => {\n                if (page > 1) {\n                  setPage(page - 1)\n                }\n              }}\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </CPaginationItem>\n\n            {Array.from({ length: Math.ceil(total / limit) }, (_, i) => i + 1).map((_page) => (\n              <CPaginationItem active={_page === page} key={_page} onClick={() => setPage(_page)}>\n                {_page}\n              </CPaginationItem>\n            ))}\n\n            <CPaginationItem aria-label=\"Next\">\n              <span\n                aria-hidden=\"true\"\n                onClick={() => {\n                  if (page < totalPages) {\n                    setPage(page + 1)\n                  }\n                }}\n              >\n                &raquo;\n              </span>\n            </CPaginationItem>\n          </CPagination>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default ServiceList\n","export const cilBan = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M425.706,86.294A240,240,0,0,0,86.294,425.705,240,240,0,0,0,425.706,86.294ZM256,48A207.1,207.1,0,0,1,391.528,98.345L98.345,391.528A207.1,207.1,0,0,1,48,256C48,141.309,141.309,48,256,48Zm0,416a207.084,207.084,0,0,1-134.986-49.887l293.1-293.1A207.084,207.084,0,0,1,464,256C464,370.691,370.691,464,256,464Z' class='ci-primary'/>\"]","export const cilCheckCircle = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M426.072,86.928A238.75,238.75,0,0,0,88.428,424.572,238.75,238.75,0,0,0,426.072,86.928ZM257.25,462.5c-114,0-206.75-92.748-206.75-206.75S143.248,49,257.25,49,464,141.748,464,255.75,371.252,462.5,257.25,462.5Z' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='221.27 305.808 147.857 232.396 125.23 255.023 221.27 351.063 388.77 183.564 366.142 160.937 221.27 305.808' class='ci-primary'/>\"]"],"names":["loading","text","id","className","role","setHeader","token","store","user","headers","Authorization","serviceList","obj","request","apiUrl","addService","serviceById","updateService","serviceListAction","callback","dispatch","res","status","type","payload","services","data","total","toastify","response","err","message","serviceListClearAction","addServiceAction","serviceByIdAction","service","updateServiceAction","state","totalRecords","useSelector","useDispatch","useState","limit","page","setPage","statusFilter","setStatusFilter","serviceTypeFilter","setServiceTypeFilter","serviceNameFilter","setServiceNameFilter","setLoading","useEffect","isDeleted","name","serviceType","loadingCallback","Loader","onSubmit","e","preventDefault","value","placeholder","onChange","target","disabled","color","variant","onClick","xs","to","scope","map","categoryId","price","costPrice","supplier","icon","cilCheckCircle","cilBan","_id","cilPencil","Array","from","length","Math","ceil","_","i","_page","active","totalPages"],"sourceRoot":""}