{"version":3,"file":"static/js/7479.b06cf923.chunk.js","mappings":"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","sources":["store/services/credit.js","store/actions/credits.js","views/credit/ManageAccount.js"],"sourcesContent":["import { apiUrl } from 'src/configs/config'\nimport request from 'src/configs/request'\nimport { store } from '../store'\nconst setHeader = () => {\n  const { token } = store.getState().user\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n}\n\nexport const addStripe = (obj) => {\n  return request.post(apiUrl + 'users/createPaymentInfo', obj, setHeader())\n}\n\nexport const addCredits = (obj) => {\n  return request.post(apiUrl + 'users/purchaseCredits', obj, setHeader())\n}\n\nexport const getCredits = (id) => {\n  return request.get(apiUrl + `users/credits/${id}`, setHeader())\n}\n","import { addStripe, addCredits, getCredits } from 'src/store/services/credit'\nimport { toastify } from '../services/toastify'\n\nexport const addStripeAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await addStripe(obj)\n    if (res.status === 201) {\n      toastify('success', res?.data?.data.message)\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const buyCreditsAction = (obj, callback) => async (dispatch) => {\n  try {\n    const res = await addCredits(obj)\n    if (res.status === 201) {\n      toastify('success', res?.data?.data.message)\n      callback()\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n\nexport const getUserCreditsAction = (id) => async (dispatch) => {\n  try {\n    const res = await getCredits(id)\n    if (res.status === 200) {\n      dispatch({\n        type: 'UserCredits',\n        payload: {\n          credits: res.data.data.credits,\n        },\n      })\n      // toastify('success', res?.data?.data.message)\n    }\n  } catch (err) {\n    toastify('error', err?.response?.data?.err.message)\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CContainer,\n  CForm,\n  CFormLabel,\n  CFormInput,\n  CButton,\n} from '@coreui/react'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { ToastContainer } from 'react-toastify'\nimport { toastify } from 'src/store/services/toastify'\nimport { user } from 'src/store/selector/order'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addStripeAction } from 'src/store/actions/credits'\nconst ManageAccount = () => {\n  const [cardNumber, setCardNumber] = useState([])\n  const [cvc, setCvc] = useState('')\n  const [expiry, setExpiry] = useState('')\n\n  const userDetail = useSelector(user)\n\n  const dispatch = useDispatch()\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log(cardNumber, cvc, expiry)\n    dispatch(addStripeAction({ cardNumber, cvc, expiry, userId: userDetail._id }, callback))\n  }\n  const callback = () => {\n    setCardNumber('')\n    setCvc('')\n    setExpiry('')\n  }\n  return (\n    <>\n      <CContainer className=\"\">\n        <CRow>\n          <CCol xs={12}>\n            <CCard className=\"mb-4\">\n              <CCardHeader className=\"\">\n                <strong>Card Details</strong>\n              </CCardHeader>\n              <CCardBody>\n                <CContainer className=\"mt-2 mb-5\">\n                  <CRow>\n                    <CCol>\n                      {' '}\n                      <CForm onSubmit={submitHandler}>\n                        <div className=\"mb-3\">\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Card Number</CFormLabel>\n                          <CFormInput\n                            type=\"text\"\n                            placeholder=\"0000 0000 0000 0000\"\n                            value={cardNumber}\n                            maxLength={16}\n                            onChange={(e) => setCardNumber(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Expiry</CFormLabel>\n                          <CFormInput\n                            type=\"text\"\n                            placeholder=\"MM/YY\"\n                            value={expiry}\n                            onChange={(e) => setExpiry(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"mb-3\">\n                          <CFormLabel htmlFor=\"exampleFormControlInput1\">Cvc</CFormLabel>\n                          <CFormInput\n                            type=\"text\"\n                            placeholder=\"XXX\"\n                            value={cvc}\n                            onChange={(e) => setCvc(e.target.value)}\n                          />\n                        </div>\n\n                        <div className=\"text-end\">\n                          <CButton className=\"m-auto\" type=\"submit\" color=\"light\">\n                            Save\n                          </CButton>\n                        </div>\n                      </CForm>\n                    </CCol>\n                    <CCol></CCol>\n                  </CRow>\n                </CContainer>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <ToastContainer />\n    </>\n  )\n}\n\nexport default ManageAccount\n"],"names":["setHeader","token","store","user","headers","Authorization","addStripe","obj","request","apiUrl","addCredits","getCredits","id","addStripeAction","callback","dispatch","res","status","toastify","data","message","response","err","buyCreditsAction","getUserCreditsAction","type","payload","credits","useState","cardNumber","setCardNumber","cvc","setCvc","expiry","setExpiry","userDetail","useSelector","useDispatch","className","xs","onSubmit","e","preventDefault","console","log","userId","_id","htmlFor","placeholder","value","maxLength","onChange","target","color"],"sourceRoot":""}